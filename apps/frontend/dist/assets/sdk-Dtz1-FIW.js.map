{"version":3,"file":"sdk-Dtz1-FIW.js","sources":["../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/errors/HTTPError.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/errors/NonError.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/core/constants.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/body.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/is.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/merge.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/normalize.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/errors/TimeoutError.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/timeout.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/delay.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/options.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/utils/type-guards.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/core/Ky.js","../../../../node_modules/.pnpm/ky@1.13.0/node_modules/ky/distribution/index.js","../../../../packages/sdk-js/src/index.ts","../../src/data/clients/sdk.ts"],"sourcesContent":["export class HTTPError extends Error {\n    response;\n    request;\n    options;\n    constructor(response, request, options) {\n        const code = (response.status || response.status === 0) ? response.status : '';\n        const title = response.statusText ?? '';\n        const status = `${code} ${title}`.trim();\n        const reason = status ? `status code ${status}` : 'an unknown error';\n        super(`Request failed with ${reason}: ${request.method} ${request.url}`);\n        this.name = 'HTTPError';\n        this.response = response;\n        this.request = request;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=HTTPError.js.map","/**\nWrapper for non-Error values that were thrown.\n\nIn JavaScript, any value can be thrown (not just Error instances). This class wraps such values to ensure consistent error handling.\n*/\nexport class NonError extends Error {\n    name = 'NonError';\n    value;\n    constructor(value) {\n        let message = 'Non-error value was thrown';\n        // Intentionally minimal as this error is just an edge-case.\n        try {\n            if (typeof value === 'string') {\n                message = value;\n            }\n            else if (value && typeof value === 'object' && 'message' in value && typeof value.message === 'string') {\n                message = value.message;\n            }\n        }\n        catch {\n            // Use default message if accessing properties throws\n        }\n        super(message);\n        this.value = value;\n    }\n}\n//# sourceMappingURL=NonError.js.map","export const supportsRequestStreams = (() => {\n    let duplexAccessed = false;\n    let hasContentType = false;\n    const supportsReadableStream = typeof globalThis.ReadableStream === 'function';\n    const supportsRequest = typeof globalThis.Request === 'function';\n    if (supportsReadableStream && supportsRequest) {\n        try {\n            hasContentType = new globalThis.Request('https://empty.invalid', {\n                body: new globalThis.ReadableStream(),\n                method: 'POST',\n                // @ts-expect-error - Types are outdated.\n                get duplex() {\n                    duplexAccessed = true;\n                    return 'half';\n                },\n            }).headers.has('Content-Type');\n        }\n        catch (error) {\n            // QQBrowser on iOS throws \"unsupported BodyInit type\" error (see issue #581)\n            if (error instanceof Error && error.message === 'unsupported BodyInit type') {\n                return false;\n            }\n            throw error;\n        }\n    }\n    return duplexAccessed && !hasContentType;\n})();\nexport const supportsAbortController = typeof globalThis.AbortController === 'function';\nexport const supportsAbortSignal = typeof globalThis.AbortSignal === 'function' && typeof globalThis.AbortSignal.any === 'function';\nexport const supportsResponseStreams = typeof globalThis.ReadableStream === 'function';\nexport const supportsFormData = typeof globalThis.FormData === 'function';\nexport const requestMethods = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst validate = () => undefined;\nvalidate();\nexport const responseTypes = {\n    json: 'application/json',\n    text: 'text/*',\n    formData: 'multipart/form-data',\n    arrayBuffer: '*/*',\n    blob: '*/*',\n    // Supported in modern Fetch implementations (for example, browsers and recent Node.js/undici).\n    // We still feature-check at runtime before exposing the shortcut.\n    bytes: '*/*',\n};\n// The maximum value of a 32bit int (see issue #117)\nexport const maxSafeTimeout = 2_147_483_647;\n// Size in bytes of a typical form boundary, used to help estimate upload size\nexport const usualFormBoundarySize = new TextEncoder().encode('------WebKitFormBoundaryaxpyiPgbbPti10Rw').length;\nexport const stop = Symbol('stop');\nexport const kyOptionKeys = {\n    json: true,\n    parseJson: true,\n    stringifyJson: true,\n    searchParams: true,\n    prefixUrl: true,\n    retry: true,\n    timeout: true,\n    hooks: true,\n    throwHttpErrors: true,\n    onDownloadProgress: true,\n    onUploadProgress: true,\n    fetch: true,\n    context: true,\n};\n// Vendor-specific fetch options that should always be passed to fetch()\n// even if they appear on the Request object due to vendor patching.\n// See: https://github.com/sindresorhus/ky/issues/541\nexport const vendorSpecificOptions = {\n    next: true, // Next.js cache revalidation (revalidate, tags)\n};\n// Standard RequestInit options that should NOT be passed separately to fetch()\n// because they're already applied to the Request object.\n// Note: `dispatcher` and `priority` are NOT included here - they're fetch-only\n// options that the Request constructor doesn't accept, so they need to be passed\n// separately to fetch().\nexport const requestOptionsRegistry = {\n    method: true,\n    headers: true,\n    body: true,\n    mode: true,\n    credentials: true,\n    cache: true,\n    redirect: true,\n    referrer: true,\n    referrerPolicy: true,\n    integrity: true,\n    keepalive: true,\n    signal: true,\n    window: true,\n    duplex: true,\n};\n//# sourceMappingURL=constants.js.map","import { usualFormBoundarySize } from '../core/constants.js';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const getBodySize = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (body instanceof FormData) {\n        // This is an approximation, as FormData size calculation is not straightforward\n        let size = 0;\n        for (const [key, value] of body) {\n            size += usualFormBoundarySize;\n            size += new TextEncoder().encode(`Content-Disposition: form-data; name=\"${key}\"`).length;\n            size += typeof value === 'string'\n                ? new TextEncoder().encode(value).length\n                : value.size;\n        }\n        return size;\n    }\n    if (body instanceof Blob) {\n        return body.size;\n    }\n    if (body instanceof ArrayBuffer) {\n        return body.byteLength;\n    }\n    if (typeof body === 'string') {\n        return new TextEncoder().encode(body).length;\n    }\n    if (body instanceof URLSearchParams) {\n        return new TextEncoder().encode(body.toString()).length;\n    }\n    if ('byteLength' in body) {\n        return (body).byteLength;\n    }\n    if (typeof body === 'object' && body !== null) {\n        try {\n            const jsonString = JSON.stringify(body);\n            return new TextEncoder().encode(jsonString).length;\n        }\n        catch {\n            return 0;\n        }\n    }\n    return 0; // Default case, unable to determine size\n};\nconst withProgress = (stream, totalBytes, onProgress) => {\n    let previousChunk;\n    let transferredBytes = 0;\n    return stream.pipeThrough(new TransformStream({\n        transform(currentChunk, controller) {\n            controller.enqueue(currentChunk);\n            if (previousChunk) {\n                transferredBytes += previousChunk.byteLength;\n                let percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n                // Avoid reporting 100% progress before the stream is actually finished (in case totalBytes is inaccurate)\n                if (percent >= 1) {\n                    // Epsilon is used here to get as close as possible to 100% without reaching it.\n                    // If we were to use 0.99 here, percent could potentially go backwards.\n                    percent = 1 - Number.EPSILON;\n                }\n                onProgress?.({ percent, totalBytes: Math.max(totalBytes, transferredBytes), transferredBytes }, previousChunk);\n            }\n            previousChunk = currentChunk;\n        },\n        flush() {\n            if (previousChunk) {\n                transferredBytes += previousChunk.byteLength;\n                onProgress?.({ percent: 1, totalBytes: Math.max(totalBytes, transferredBytes), transferredBytes }, previousChunk);\n            }\n        },\n    }));\n};\nexport const streamResponse = (response, onDownloadProgress) => {\n    if (!response.body) {\n        return response;\n    }\n    if (response.status === 204) {\n        return new Response(null, {\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n        });\n    }\n    const totalBytes = Math.max(0, Number(response.headers.get('content-length')) || 0);\n    return new Response(withProgress(response.body, totalBytes, onDownloadProgress), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n    });\n};\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const streamRequest = (request, onUploadProgress, originalBody) => {\n    if (!request.body) {\n        return request;\n    }\n    // Use original body for size calculation since request.body is already a stream\n    const totalBytes = getBodySize(originalBody ?? request.body);\n    return new Request(request, {\n        // @ts-expect-error - Types are outdated.\n        duplex: 'half',\n        body: withProgress(request.body, totalBytes, onUploadProgress),\n    });\n};\n//# sourceMappingURL=body.js.map","// eslint-disable-next-line @typescript-eslint/ban-types\nexport const isObject = (value) => value !== null && typeof value === 'object';\n//# sourceMappingURL=is.js.map","import { supportsAbortSignal } from '../core/constants.js';\nimport { isObject } from './is.js';\nexport const validateAndMerge = (...sources) => {\n    for (const source of sources) {\n        if ((!isObject(source) || Array.isArray(source)) && source !== undefined) {\n            throw new TypeError('The `options` argument must be an object');\n        }\n    }\n    return deepMerge({}, ...sources);\n};\nexport const mergeHeaders = (source1 = {}, source2 = {}) => {\n    const result = new globalThis.Headers(source1);\n    const isHeadersInstance = source2 instanceof globalThis.Headers;\n    const source = new globalThis.Headers(source2);\n    for (const [key, value] of source.entries()) {\n        if ((isHeadersInstance && value === 'undefined') || value === undefined) {\n            result.delete(key);\n        }\n        else {\n            result.set(key, value);\n        }\n    }\n    return result;\n};\nfunction newHookValue(original, incoming, property) {\n    return (Object.hasOwn(incoming, property) && incoming[property] === undefined)\n        ? []\n        : deepMerge(original[property] ?? [], incoming[property] ?? []);\n}\nexport const mergeHooks = (original = {}, incoming = {}) => ({\n    beforeRequest: newHookValue(original, incoming, 'beforeRequest'),\n    beforeRetry: newHookValue(original, incoming, 'beforeRetry'),\n    afterResponse: newHookValue(original, incoming, 'afterResponse'),\n    beforeError: newHookValue(original, incoming, 'beforeError'),\n});\nconst appendSearchParameters = (target, source) => {\n    const result = new URLSearchParams();\n    for (const input of [target, source]) {\n        if (input === undefined) {\n            continue;\n        }\n        if (input instanceof URLSearchParams) {\n            for (const [key, value] of input.entries()) {\n                result.append(key, value);\n            }\n        }\n        else if (Array.isArray(input)) {\n            for (const pair of input) {\n                if (!Array.isArray(pair) || pair.length !== 2) {\n                    throw new TypeError('Array search parameters must be provided in [[key, value], ...] format');\n                }\n                result.append(String(pair[0]), String(pair[1]));\n            }\n        }\n        else if (isObject(input)) {\n            for (const [key, value] of Object.entries(input)) {\n                if (value !== undefined) {\n                    result.append(key, String(value));\n                }\n            }\n        }\n        else {\n            // String\n            const parameters = new URLSearchParams(input);\n            for (const [key, value] of parameters.entries()) {\n                result.append(key, value);\n            }\n        }\n    }\n    return result;\n};\n// TODO: Make this strongly-typed (no `any`).\nexport const deepMerge = (...sources) => {\n    let returnValue = {};\n    let headers = {};\n    let hooks = {};\n    let searchParameters;\n    const signals = [];\n    for (const source of sources) {\n        if (Array.isArray(source)) {\n            if (!Array.isArray(returnValue)) {\n                returnValue = [];\n            }\n            returnValue = [...returnValue, ...source];\n        }\n        else if (isObject(source)) {\n            for (let [key, value] of Object.entries(source)) {\n                // Special handling for AbortSignal instances\n                if (key === 'signal' && value instanceof globalThis.AbortSignal) {\n                    signals.push(value);\n                    continue;\n                }\n                // Special handling for context - shallow merge only\n                if (key === 'context') {\n                    if (value !== undefined && value !== null && (!isObject(value) || Array.isArray(value))) {\n                        throw new TypeError('The `context` option must be an object');\n                    }\n                    // Shallow merge: always create a new object to prevent mutation bugs\n                    returnValue = {\n                        ...returnValue,\n                        context: (value === undefined || value === null)\n                            ? {}\n                            : { ...returnValue.context, ...value },\n                    };\n                    continue;\n                }\n                // Special handling for searchParams\n                if (key === 'searchParams') {\n                    if (value === undefined || value === null) {\n                        // Explicit undefined or null removes searchParams\n                        searchParameters = undefined;\n                    }\n                    else {\n                        // First source: keep as-is to preserve type (string/object/URLSearchParams)\n                        // Subsequent sources: merge and convert to URLSearchParams\n                        searchParameters = searchParameters === undefined ? value : appendSearchParameters(searchParameters, value);\n                    }\n                    continue;\n                }\n                if (isObject(value) && key in returnValue) {\n                    value = deepMerge(returnValue[key], value);\n                }\n                returnValue = { ...returnValue, [key]: value };\n            }\n            if (isObject(source.hooks)) {\n                hooks = mergeHooks(hooks, source.hooks);\n                returnValue.hooks = hooks;\n            }\n            if (isObject(source.headers)) {\n                headers = mergeHeaders(headers, source.headers);\n                returnValue.headers = headers;\n            }\n        }\n    }\n    if (searchParameters !== undefined) {\n        returnValue.searchParams = searchParameters;\n    }\n    if (signals.length > 0) {\n        if (signals.length === 1) {\n            returnValue.signal = signals[0];\n        }\n        else if (supportsAbortSignal) {\n            returnValue.signal = AbortSignal.any(signals);\n        }\n        else {\n            // When AbortSignal.any is not available, use the last signal\n            // This maintains the previous behavior before signal merging was added\n            // This can be remove when the `supportsAbortSignal` check is removed.`\n            returnValue.signal = signals.at(-1);\n        }\n    }\n    if (returnValue.context === undefined) {\n        returnValue.context = {};\n    }\n    return returnValue;\n};\n//# sourceMappingURL=merge.js.map","import { requestMethods } from '../core/constants.js';\nexport const normalizeRequestMethod = (input) => requestMethods.includes(input) ? input.toUpperCase() : input;\nconst retryMethods = ['get', 'put', 'head', 'delete', 'options', 'trace'];\nconst retryStatusCodes = [408, 413, 429, 500, 502, 503, 504];\nconst retryAfterStatusCodes = [413, 429, 503];\nconst defaultRetryOptions = {\n    limit: 2,\n    methods: retryMethods,\n    statusCodes: retryStatusCodes,\n    afterStatusCodes: retryAfterStatusCodes,\n    maxRetryAfter: Number.POSITIVE_INFINITY,\n    backoffLimit: Number.POSITIVE_INFINITY,\n    delay: attemptCount => 0.3 * (2 ** (attemptCount - 1)) * 1000,\n    jitter: undefined,\n    retryOnTimeout: false,\n};\nexport const normalizeRetryOptions = (retry = {}) => {\n    if (typeof retry === 'number') {\n        return {\n            ...defaultRetryOptions,\n            limit: retry,\n        };\n    }\n    if (retry.methods && !Array.isArray(retry.methods)) {\n        throw new Error('retry.methods must be an array');\n    }\n    if (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n        throw new Error('retry.statusCodes must be an array');\n    }\n    return {\n        ...defaultRetryOptions,\n        ...retry,\n    };\n};\n//# sourceMappingURL=normalize.js.map","export class TimeoutError extends Error {\n    request;\n    constructor(request) {\n        super(`Request timed out: ${request.method} ${request.url}`);\n        this.name = 'TimeoutError';\n        this.request = request;\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map","import { TimeoutError } from '../errors/TimeoutError.js';\n// `Promise.race()` workaround (#91)\nexport default async function timeout(request, init, abortController, options) {\n    return new Promise((resolve, reject) => {\n        const timeoutId = setTimeout(() => {\n            if (abortController) {\n                abortController.abort();\n            }\n            reject(new TimeoutError(request));\n        }, options.timeout);\n        void options\n            .fetch(request, init)\n            .then(resolve)\n            .catch(reject)\n            .then(() => {\n            clearTimeout(timeoutId);\n        });\n    });\n}\n//# sourceMappingURL=timeout.js.map","// https://github.com/sindresorhus/delay/tree/ab98ae8dfcb38e1593286c94d934e70d14a4e111\nexport default async function delay(ms, { signal }) {\n    return new Promise((resolve, reject) => {\n        if (signal) {\n            signal.throwIfAborted();\n            signal.addEventListener('abort', abortHandler, { once: true });\n        }\n        function abortHandler() {\n            clearTimeout(timeoutId);\n            reject(signal.reason);\n        }\n        const timeoutId = setTimeout(() => {\n            signal?.removeEventListener('abort', abortHandler);\n            resolve();\n        }, ms);\n    });\n}\n//# sourceMappingURL=delay.js.map","import { kyOptionKeys, requestOptionsRegistry, vendorSpecificOptions } from '../core/constants.js';\nexport const findUnknownOptions = (request, options) => {\n    const unknownOptions = {};\n    for (const key in options) {\n        // Skip inherited properties\n        if (!Object.hasOwn(options, key)) {\n            continue;\n        }\n        // An option is passed to fetch() if:\n        // 1. It's not a standard RequestInit option (not in requestOptionsRegistry)\n        // 2. It's not a ky-specific option (not in kyOptionKeys)\n        // 3. Either:\n        //    a. It's not on the Request object, OR\n        //    b. It's a vendor-specific option that should always be passed (in vendorSpecificOptions)\n        if (!(key in requestOptionsRegistry) && !(key in kyOptionKeys) && (!(key in request) || key in vendorSpecificOptions)) {\n            unknownOptions[key] = options[key];\n        }\n    }\n    return unknownOptions;\n};\nexport const hasSearchParameters = (search) => {\n    if (search === undefined) {\n        return false;\n    }\n    // The `typeof array` still gives \"object\", so we need different checking for array.\n    if (Array.isArray(search)) {\n        return search.length > 0;\n    }\n    if (search instanceof URLSearchParams) {\n        return search.size > 0;\n    }\n    // Record\n    if (typeof search === 'object') {\n        return Object.keys(search).length > 0;\n    }\n    if (typeof search === 'string') {\n        return search.trim().length > 0;\n    }\n    return Boolean(search);\n};\n//# sourceMappingURL=options.js.map","import { HTTPError } from '../errors/HTTPError.js';\nimport { TimeoutError } from '../errors/TimeoutError.js';\n/**\nType guard to check if an error is a Ky error (HTTPError or TimeoutError).\n\n@param error - The error to check\n@returns `true` if the error is a Ky error, `false` otherwise\n\n@example\n```\nimport ky, {isKyError} from 'ky';\ntry {\n    const response = await ky.get('/api/data');\n} catch (error) {\n    if (isKyError(error)) {\n        // Handle Ky-specific errors\n        console.log('Ky error occurred:', error.message);\n    } else {\n        // Handle other errors\n        console.log('Unknown error:', error);\n    }\n}\n```\n*/\nexport function isKyError(error) {\n    return isHTTPError(error) || isTimeoutError(error);\n}\n/**\nType guard to check if an error is an HTTPError.\n\n@param error - The error to check\n@returns `true` if the error is an HTTPError, `false` otherwise\n\n@example\n```\nimport ky, {isHTTPError} from 'ky';\ntry {\n    const response = await ky.get('/api/data');\n} catch (error) {\n    if (isHTTPError(error)) {\n        console.log('HTTP error status:', error.response.status);\n    }\n}\n```\n*/\nexport function isHTTPError(error) {\n    return error instanceof HTTPError || (error?.name === HTTPError.name);\n}\n/**\nType guard to check if an error is a TimeoutError.\n\n@param error - The error to check\n@returns `true` if the error is a TimeoutError, `false` otherwise\n\n@example\n```\nimport ky, {isTimeoutError} from 'ky';\ntry {\n    const response = await ky.get('/api/data', { timeout: 1000 });\n} catch (error) {\n    if (isTimeoutError(error)) {\n        console.log('Request timed out:', error.request.url);\n    }\n}\n```\n*/\nexport function isTimeoutError(error) {\n    return error instanceof TimeoutError || (error?.name === TimeoutError.name);\n}\n//# sourceMappingURL=type-guards.js.map","import { HTTPError } from '../errors/HTTPError.js';\nimport { NonError } from '../errors/NonError.js';\nimport { streamRequest, streamResponse } from '../utils/body.js';\nimport { mergeHeaders, mergeHooks } from '../utils/merge.js';\nimport { normalizeRequestMethod, normalizeRetryOptions } from '../utils/normalize.js';\nimport timeout from '../utils/timeout.js';\nimport delay from '../utils/delay.js';\nimport { findUnknownOptions, hasSearchParameters } from '../utils/options.js';\nimport { isHTTPError, isTimeoutError } from '../utils/type-guards.js';\nimport { maxSafeTimeout, responseTypes, stop, supportsAbortController, supportsAbortSignal, supportsFormData, supportsResponseStreams, supportsRequestStreams, } from './constants.js';\nexport class Ky {\n    static create(input, options) {\n        const ky = new Ky(input, options);\n        const function_ = async () => {\n            if (typeof ky.#options.timeout === 'number' && ky.#options.timeout > maxSafeTimeout) {\n                throw new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n            }\n            // Delay the fetch so that body method shortcuts can set the Accept header\n            await Promise.resolve();\n            // Before using ky.request, _fetch clones it and saves the clone for future retries to use.\n            // If retry is not needed, close the cloned request's ReadableStream for memory safety.\n            let response = await ky.#fetch();\n            for (const hook of ky.#options.hooks.afterResponse) {\n                // eslint-disable-next-line no-await-in-loop\n                const modifiedResponse = await hook(ky.request, ky.#getNormalizedOptions(), ky.#decorateResponse(response.clone()), { retryCount: ky.#retryCount });\n                if (modifiedResponse instanceof globalThis.Response) {\n                    response = modifiedResponse;\n                }\n            }\n            ky.#decorateResponse(response);\n            if (!response.ok && ky.#options.throwHttpErrors) {\n                let error = new HTTPError(response, ky.request, ky.#getNormalizedOptions());\n                for (const hook of ky.#options.hooks.beforeError) {\n                    // eslint-disable-next-line no-await-in-loop\n                    error = await hook(error, { retryCount: ky.#retryCount });\n                }\n                throw error;\n            }\n            // If `onDownloadProgress` is passed, it uses the stream API internally\n            if (ky.#options.onDownloadProgress) {\n                if (typeof ky.#options.onDownloadProgress !== 'function') {\n                    throw new TypeError('The `onDownloadProgress` option must be a function');\n                }\n                if (!supportsResponseStreams) {\n                    throw new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n                }\n                return streamResponse(response.clone(), ky.#options.onDownloadProgress);\n            }\n            return response;\n        };\n        const isRetriableMethod = ky.#options.retry.methods.includes(ky.request.method.toLowerCase());\n        const result = (isRetriableMethod ? ky.#retry(function_) : function_())\n            .finally(async () => {\n            const originalRequest = ky.#originalRequest;\n            const cleanupPromises = [];\n            if (originalRequest && !originalRequest.bodyUsed) {\n                cleanupPromises.push(originalRequest.body?.cancel());\n            }\n            if (!ky.request.bodyUsed) {\n                cleanupPromises.push(ky.request.body?.cancel());\n            }\n            await Promise.all(cleanupPromises);\n        });\n        for (const [type, mimeType] of Object.entries(responseTypes)) {\n            // Only expose `.bytes()` when the environment implements it.\n            if (type === 'bytes'\n                && typeof globalThis.Response?.prototype?.bytes !== 'function') {\n                continue;\n            }\n            result[type] = async () => {\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                ky.request.headers.set('accept', ky.request.headers.get('accept') || mimeType);\n                const response = await result;\n                if (type === 'json') {\n                    if (response.status === 204) {\n                        return '';\n                    }\n                    const text = await response.text();\n                    if (text === '') {\n                        return '';\n                    }\n                    if (options.parseJson) {\n                        return options.parseJson(text);\n                    }\n                    return JSON.parse(text);\n                }\n                return response[type]();\n            };\n        }\n        return result;\n    }\n    // eslint-disable-next-line unicorn/prevent-abbreviations\n    static #normalizeSearchParams(searchParams) {\n        // Filter out undefined values from plain objects\n        if (searchParams && typeof searchParams === 'object' && !Array.isArray(searchParams) && !(searchParams instanceof URLSearchParams)) {\n            return Object.fromEntries(Object.entries(searchParams).filter(([, value]) => value !== undefined));\n        }\n        return searchParams;\n    }\n    request;\n    #abortController;\n    #retryCount = 0;\n    // eslint-disable-next-line @typescript-eslint/prefer-readonly -- False positive: #input is reassigned on line 202\n    #input;\n    #options;\n    #originalRequest;\n    #userProvidedAbortSignal;\n    #cachedNormalizedOptions;\n    // eslint-disable-next-line complexity\n    constructor(input, options = {}) {\n        this.#input = input;\n        this.#options = {\n            ...options,\n            headers: mergeHeaders(this.#input.headers, options.headers),\n            hooks: mergeHooks({\n                beforeRequest: [],\n                beforeRetry: [],\n                beforeError: [],\n                afterResponse: [],\n            }, options.hooks),\n            method: normalizeRequestMethod(options.method ?? this.#input.method ?? 'GET'),\n            // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n            prefixUrl: String(options.prefixUrl || ''),\n            retry: normalizeRetryOptions(options.retry),\n            throwHttpErrors: options.throwHttpErrors !== false,\n            timeout: options.timeout ?? 10_000,\n            fetch: options.fetch ?? globalThis.fetch.bind(globalThis),\n            context: options.context ?? {},\n        };\n        if (typeof this.#input !== 'string' && !(this.#input instanceof URL || this.#input instanceof globalThis.Request)) {\n            throw new TypeError('`input` must be a string, URL, or Request');\n        }\n        if (this.#options.prefixUrl && typeof this.#input === 'string') {\n            if (this.#input.startsWith('/')) {\n                throw new Error('`input` must not begin with a slash when using `prefixUrl`');\n            }\n            if (!this.#options.prefixUrl.endsWith('/')) {\n                this.#options.prefixUrl += '/';\n            }\n            this.#input = this.#options.prefixUrl + this.#input;\n        }\n        if (supportsAbortController && supportsAbortSignal) {\n            this.#userProvidedAbortSignal = this.#options.signal ?? this.#input.signal;\n            this.#abortController = new globalThis.AbortController();\n            this.#options.signal = this.#userProvidedAbortSignal ? AbortSignal.any([this.#userProvidedAbortSignal, this.#abortController.signal]) : this.#abortController.signal;\n        }\n        if (supportsRequestStreams) {\n            // @ts-expect-error - Types are outdated.\n            this.#options.duplex = 'half';\n        }\n        if (this.#options.json !== undefined) {\n            this.#options.body = this.#options.stringifyJson?.(this.#options.json) ?? JSON.stringify(this.#options.json);\n            this.#options.headers.set('content-type', this.#options.headers.get('content-type') ?? 'application/json');\n        }\n        // To provide correct form boundary, Content-Type header should be deleted when creating Request from another Request with FormData/URLSearchParams body\n        // Only delete if user didn't explicitly provide a custom content-type\n        const userProvidedContentType = options.headers && new globalThis.Headers(options.headers).has('content-type');\n        if (this.#input instanceof globalThis.Request\n            && ((supportsFormData && this.#options.body instanceof globalThis.FormData) || this.#options.body instanceof URLSearchParams)\n            && !userProvidedContentType) {\n            this.#options.headers.delete('content-type');\n        }\n        this.request = new globalThis.Request(this.#input, this.#options);\n        if (hasSearchParameters(this.#options.searchParams)) {\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const textSearchParams = typeof this.#options.searchParams === 'string'\n                ? this.#options.searchParams.replace(/^\\?/, '')\n                : new URLSearchParams(Ky.#normalizeSearchParams(this.#options.searchParams)).toString();\n            // eslint-disable-next-line unicorn/prevent-abbreviations\n            const searchParams = '?' + textSearchParams;\n            const url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n            // The spread of `this.request` is required as otherwise it misses the `duplex` option for some reason and throws.\n            this.request = new globalThis.Request(new globalThis.Request(url, { ...this.request }), this.#options);\n        }\n        // If `onUploadProgress` is passed, it uses the stream API internally\n        if (this.#options.onUploadProgress) {\n            if (typeof this.#options.onUploadProgress !== 'function') {\n                throw new TypeError('The `onUploadProgress` option must be a function');\n            }\n            if (!supportsRequestStreams) {\n                throw new Error('Request streams are not supported in your environment. The `duplex` option for `Request` is not available.');\n            }\n            const originalBody = this.request.body;\n            if (originalBody) {\n                // Pass original body to calculate size correctly (before it becomes a stream)\n                this.request = streamRequest(this.request, this.#options.onUploadProgress, this.#options.body);\n            }\n        }\n    }\n    #calculateDelay() {\n        const retryDelay = this.#options.retry.delay(this.#retryCount);\n        let jitteredDelay = retryDelay;\n        if (this.#options.retry.jitter === true) {\n            jitteredDelay = Math.random() * retryDelay;\n        }\n        else if (typeof this.#options.retry.jitter === 'function') {\n            jitteredDelay = this.#options.retry.jitter(retryDelay);\n            if (!Number.isFinite(jitteredDelay) || jitteredDelay < 0) {\n                jitteredDelay = retryDelay;\n            }\n        }\n        return Math.min(this.#options.retry.backoffLimit, jitteredDelay);\n    }\n    async #calculateRetryDelay(error) {\n        this.#retryCount++;\n        if (this.#retryCount > this.#options.retry.limit) {\n            throw error;\n        }\n        // Wrap non-Error throws to ensure consistent error handling\n        const errorObject = error instanceof Error ? error : new NonError(error);\n        // User-provided shouldRetry function takes precedence over all other checks\n        if (this.#options.retry.shouldRetry !== undefined) {\n            const result = await this.#options.retry.shouldRetry({ error: errorObject, retryCount: this.#retryCount });\n            // Strict boolean checking - only exact true/false are handled specially\n            if (result === false) {\n                throw error;\n            }\n            if (result === true) {\n                // Force retry - skip all other validation and return delay\n                return this.#calculateDelay();\n            }\n            // If undefined or any other value, fall through to default behavior\n        }\n        // Default timeout behavior\n        if (isTimeoutError(error) && !this.#options.retry.retryOnTimeout) {\n            throw error;\n        }\n        if (isHTTPError(error)) {\n            if (!this.#options.retry.statusCodes.includes(error.response.status)) {\n                throw error;\n            }\n            const retryAfter = error.response.headers.get('Retry-After')\n                ?? error.response.headers.get('RateLimit-Reset')\n                ?? error.response.headers.get('X-RateLimit-Retry-After') // Symfony-based services\n                ?? error.response.headers.get('X-RateLimit-Reset') // GitHub\n                ?? error.response.headers.get('X-Rate-Limit-Reset'); // Twitter\n            if (retryAfter && this.#options.retry.afterStatusCodes.includes(error.response.status)) {\n                let after = Number(retryAfter) * 1000;\n                if (Number.isNaN(after)) {\n                    after = Date.parse(retryAfter) - Date.now();\n                }\n                else if (after >= Date.parse('2024-01-01')) {\n                    // A large number is treated as a timestamp (fixed threshold protects against clock skew)\n                    after -= Date.now();\n                }\n                const max = this.#options.retry.maxRetryAfter ?? after;\n                // Don't apply jitter when server provides explicit retry timing\n                return after < max ? after : max;\n            }\n            if (error.response.status === 413) {\n                throw error;\n            }\n        }\n        return this.#calculateDelay();\n    }\n    #decorateResponse(response) {\n        if (this.#options.parseJson) {\n            response.json = async () => this.#options.parseJson(await response.text());\n        }\n        return response;\n    }\n    async #retry(function_) {\n        try {\n            return await function_();\n        }\n        catch (error) {\n            const ms = Math.min(await this.#calculateRetryDelay(error), maxSafeTimeout);\n            if (this.#retryCount < 1) {\n                throw error;\n            }\n            // Only use user-provided signal for delay, not our internal abortController\n            await delay(ms, this.#userProvidedAbortSignal ? { signal: this.#userProvidedAbortSignal } : {});\n            for (const hook of this.#options.hooks.beforeRetry) {\n                // eslint-disable-next-line no-await-in-loop\n                const hookResult = await hook({\n                    request: this.request,\n                    options: this.#getNormalizedOptions(),\n                    error: error,\n                    retryCount: this.#retryCount,\n                });\n                // If a Request is returned, use it for the retry\n                if (hookResult instanceof globalThis.Request) {\n                    this.request = hookResult;\n                    break;\n                }\n                // If a Response is returned, use it and skip the retry\n                if (hookResult instanceof globalThis.Response) {\n                    return hookResult;\n                }\n                // If `stop` is returned from the hook, the retry process is stopped\n                if (hookResult === stop) {\n                    return;\n                }\n            }\n            return this.#retry(function_);\n        }\n    }\n    async #fetch() {\n        // Reset abortController if it was aborted (happens on timeout retry)\n        if (this.#abortController?.signal.aborted) {\n            this.#abortController = new globalThis.AbortController();\n            this.#options.signal = this.#userProvidedAbortSignal ? AbortSignal.any([this.#userProvidedAbortSignal, this.#abortController.signal]) : this.#abortController.signal;\n            // Recreate request with new signal\n            this.request = new globalThis.Request(this.request, { signal: this.#options.signal });\n        }\n        for (const hook of this.#options.hooks.beforeRequest) {\n            // eslint-disable-next-line no-await-in-loop\n            const result = await hook(this.request, this.#getNormalizedOptions(), { retryCount: this.#retryCount });\n            if (result instanceof Request) {\n                this.request = result;\n                break;\n            }\n            if (result instanceof Response) {\n                return result;\n            }\n        }\n        const nonRequestOptions = findUnknownOptions(this.request, this.#options);\n        // Cloning is done here to prepare in advance for retries\n        this.#originalRequest = this.request;\n        this.request = this.#originalRequest.clone();\n        if (this.#options.timeout === false) {\n            return this.#options.fetch(this.#originalRequest, nonRequestOptions);\n        }\n        return timeout(this.#originalRequest, nonRequestOptions, this.#abortController, this.#options);\n    }\n    #getNormalizedOptions() {\n        if (!this.#cachedNormalizedOptions) {\n            const { hooks, ...normalizedOptions } = this.#options;\n            this.#cachedNormalizedOptions = Object.freeze(normalizedOptions);\n        }\n        return this.#cachedNormalizedOptions;\n    }\n}\n//# sourceMappingURL=Ky.js.map","/*! MIT License © Sindre Sorhus */\nimport { Ky } from './core/Ky.js';\nimport { requestMethods, stop } from './core/constants.js';\nimport { validateAndMerge } from './utils/merge.js';\nconst createInstance = (defaults) => {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n    for (const method of requestMethods) {\n        // eslint-disable-next-line @typescript-eslint/promise-function-async\n        ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, { method }));\n    }\n    ky.create = (newDefaults) => createInstance(validateAndMerge(newDefaults));\n    ky.extend = (newDefaults) => {\n        if (typeof newDefaults === 'function') {\n            newDefaults = newDefaults(defaults ?? {});\n        }\n        return createInstance(validateAndMerge(defaults, newDefaults));\n    };\n    ky.stop = stop;\n    return ky;\n};\nconst ky = createInstance();\nexport default ky;\nexport { HTTPError } from './errors/HTTPError.js';\nexport { TimeoutError } from './errors/TimeoutError.js';\nexport { isKyError, isHTTPError, isTimeoutError } from './utils/type-guards.js';\n// Intentionally not exporting this for now as it's just an implementation detail and we don't want to commit to a certain API yet at least.\n// export {NonError} from './errors/NonError.js';\n//# sourceMappingURL=index.js.map","import ky from 'ky';\n\n/**\n * Minimal typed client using ky with:\n * - JWT header (when provided)\n * - Centralized retry/timeout\n * - Normalized errors via beforeError\n */\nexport function createClient(opts:{\n  baseUrl:string;\n  getToken?:()=>Promise<string|null>|string|null;\n}) {\n  const { baseUrl, getToken } = opts;\n\n  const http = ky.create({\n    prefixUrl: baseUrl.replace(/\\/+$/, ''),\n    timeout: 10000,\n    retry: { limit: 2, methods: ['get'], statusCodes: [408,413,429,500,502,503,504] },\n    hooks: {\n      beforeRequest: [async (req) => {\n        const tok = typeof getToken === 'function' ? await getToken() : getToken;\n        if (tok) req.headers.set('Authorization', `Bearer ${tok}`);\n        req.headers.set('Content-Type', 'application/json');\n      }],\n      beforeError: [async (error) => {\n        const { response } = error;\n        if (response) {\n          let body:any=null; try { body = await response.clone().json(); } catch {}\n          const msg = (body?.message||body?.error||body?.detail) ?? response.statusText ?? error.message;\n          error.message = msg;\n          (error as any).status = response.status;\n          (error as any).body = body;\n        }\n        return error;\n      }]\n    }\n  });\n\n  return {\n    // Contacts\n    listContacts:(q?:any)=>http.get('contacts',{searchParams:q}).json<any>(),\n    getContact:(id:string)=>http.get(`contacts/${id}`).json<any>(),\n    createContact:(b:any)=>http.post('contacts',{json:b}).json<any>(),\n    updateContact:(id:string,b:any)=>http.patch(`contacts/${id}`,{json:b}).json<any>(),\n    deleteContact:(id:string)=>http.delete(`contacts/${id}`).json<any>(),\n\n    // Leads\n    listLeads:(q?:any)=>http.get('leads',{searchParams:q}).json<any>(),\n    getLead:(id:string)=>http.get(`leads/${id}`).json<any>(),\n    createLead:(b:any)=>http.post('leads',{json:b}).json<any>(),\n    updateLead:(id:string,b:any)=>http.patch(`leads/${id}`,{json:b}).json<any>(),\n    deleteLead:(id:string)=>http.delete(`leads/${id}`).json<any>(),\n\n    // Deals\n    listDeals:(q?:any)=>http.get('deals',{searchParams:q}).json<any>(),\n    getDeal:(id:string)=>http.get(`deals/${id}`).json<any>(),\n    createDeal:(b:any)=>http.post('deals',{json:b}).json<any>(),\n    updateDeal:(id:string,b:any)=>http.patch(`deals/${id}`,{json:b}).json<any>(),\n    deleteDeal:(id:string)=>http.delete(`deals/${id}`).json<any>(),\n\n    // Companies\n    listCompanies:(q?:any)=>http.get('companies',{searchParams:q}).json<any>(),\n    getCompany:(id:string)=>http.get(`companies/${id}`).json<any>(),\n    createCompany:(b:any)=>http.post('companies',{json:b}).json<any>(),\n    updateCompany:(id:string,b:any)=>http.patch(`companies/${id}`,{json:b}).json<any>(),\n    deleteCompany:(id:string)=>http.delete(`companies/${id}`).json<any>(),\n  };\n}\n","import { createClient } from '@sdk-js/core';\n\nconst baseUrl = import.meta.env.VITE_APP_API_URL ?? 'http://localhost:3000/api';\n\n// read token from context/localStorage; fall back to dev var\nasync function getToken() {\n  // Dev override from .env.local\n  const dev = import.meta.env.VITE_DEV_JWT;\n  if (dev) {\n    console.log('[SDK] Using dev JWT from env');\n    return dev as string;\n  }\n\n  // Check localStorage for JWT (from Auth0 or manual login)\n  try {\n    const raw = localStorage.getItem('jwt');\n    if (raw) return raw;\n  } catch (err) {\n    console.warn('[SDK] Failed to read JWT from localStorage:', err);\n  }\n\n  return null;\n}\n\nexport const api = createClient({ baseUrl, getToken });\n\n// Export for use in services\nexport { createClient };\n\n"],"names":["HTTPError","response","request","options","code","title","status","reason","NonError","value","message","supportsRequestStreams","duplexAccessed","hasContentType","supportsReadableStream","supportsRequest","error","supportsAbortController","supportsAbortSignal","supportsResponseStreams","supportsFormData","requestMethods","responseTypes","maxSafeTimeout","usualFormBoundarySize","stop","kyOptionKeys","vendorSpecificOptions","requestOptionsRegistry","getBodySize","body","size","key","jsonString","withProgress","stream","totalBytes","onProgress","previousChunk","transferredBytes","currentChunk","controller","percent","streamResponse","onDownloadProgress","streamRequest","onUploadProgress","originalBody","isObject","validateAndMerge","sources","source","deepMerge","mergeHeaders","source1","source2","result","isHeadersInstance","newHookValue","original","incoming","property","mergeHooks","appendSearchParameters","target","input","pair","parameters","returnValue","headers","hooks","searchParameters","signals","normalizeRequestMethod","retryMethods","retryStatusCodes","retryAfterStatusCodes","defaultRetryOptions","attemptCount","normalizeRetryOptions","retry","TimeoutError","timeout","init","abortController","resolve","reject","timeoutId","delay","ms","signal","abortHandler","findUnknownOptions","unknownOptions","hasSearchParameters","search","isHTTPError","isTimeoutError","Ky","ky","function_","#options","#fetch","hook","modifiedResponse","#getNormalizedOptions","#decorateResponse","#retryCount","#retry","originalRequest","#originalRequest","cleanupPromises","type","mimeType","text","#normalizeSearchParams","searchParams","#abortController","#input","#userProvidedAbortSignal","#cachedNormalizedOptions","userProvidedContentType","url","#calculateDelay","retryDelay","jitteredDelay","#calculateRetryDelay","errorObject","retryAfter","after","max","hookResult","nonRequestOptions","normalizedOptions","createInstance","defaults","method","newDefaults","createClient","opts","baseUrl","getToken","http","req","tok","msg","q","id","b","raw","err","api"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}