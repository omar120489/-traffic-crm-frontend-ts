name: Daily Release Check

on:
  # Allow manual trigger for testing
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      last_release: ${{ steps.last-release.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find package directories
        id: set-matrix
        run: |
          DIRS=$(git ls-tree -r HEAD --name-only | grep -E "package.json|pyproject.toml" | xargs dirname | grep -v "^.$" | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${DIRS}" >> $GITHUB_OUTPUT

      - name: Get last release hash
        id: last-release
        run: |
          HASH=$(git rev-list --tags --max-count=1 || echo "HEAD~1")
          echo "hash=${HASH}" >> $GITHUB_OUTPUT

  check-release:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ${{ fromJson(needs.prepare.outputs.matrix) }}
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: astral-sh/setup-uv@v5

      - name: Setup Node.js
        if: endsWith(matrix.directory, 'package.json')
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        if: endsWith(matrix.directory, 'pyproject.toml')
        run: uv python install

      - name: Check release
        run: |
          uv run --script scripts/release.py --dry-run "${{ matrix.directory }}" "${{ needs.prepare.outputs.last_release }}"
